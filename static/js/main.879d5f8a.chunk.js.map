{"version":3,"sources":["components/phonebook/PhonebookMain.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","App.js","index.js"],"names":["Phonebook","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","id","generate","newContact","props","onSubmit","reset","this","className","type","onChange","pattern","title","required","Component","ContactList","listContact","onDelete","map","onClick","Filter","filter","App","contacts","formSubmitHandler","data","some","contact","prevState","alert","handleFilter","item","toLowerCase","includes","handleDelete","getContacts","localStorage","getItem","arrContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.879d5f8a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { generate } from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./PhonebookMain.css\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = generate();\r\n    const { name, number } = this.state;\r\n    const newContact = { id, name, number };\r\n    this.props.onSubmit(newContact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, handleChange } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              className=\"input\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n            <label>Number</label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handleChange}\r\n              className=\"input\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n            <button type=\"submit\" className=\"btn\">\r\n              Add contact\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n\r\nPhonebook.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({ listContact, onDelete }) => {\r\n  return (\r\n    <ul className=\"contacts\">\r\n      {listContact.map(({ name, id, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            {name}: {number}\r\n            <button onClick={() => onDelete(id)} type=\"button\" className=\"btn\">\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  listContact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  return (\r\n    <div>\r\n      <label className=\"label\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n        className=\"input\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Phonebook from \"./components/phonebook/PhonebookMain.jsx\";\nimport ContactList from \"./components/contactList/ContactList.jsx\";\nimport Filter from \"./components/filter/Filter.jsx\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n    const availability = contacts.some((contact) => contact.name === data.name);\n\n    if (availability !== true) {\n      this.setState((prevState) => {\n        return { contacts: [...prevState.contacts, data] };\n      });\n    } else {\n      alert(\"Already in book!\");\n      return;\n    }\n  };\n\n  handleFilter = () => {\n    const { filter, contacts } = this.state;\n    const filteredContacts = contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  handleDelete = (id) => {\n    this.setState(({ contacts }) => {\n      const copyContactsList = [...contacts];\n      const newContactsList = copyContactsList.filter(\n        (contact) => contact.id !== id\n      );\n      return {\n        contacts: newContactsList,\n      };\n    });\n  };\n\n  componentDidMount() {\n    const getContacts = localStorage.getItem(\"contacts\");\n    const arrContacts = JSON.parse(getContacts);\n    arrContacts && this.setState({ contacts: arrContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"conteiner\">\n        <h1>Phonebook</h1>\n        <Phonebook onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter handleChange={this.handleChange} filter={this.state.filter} />\n        <ContactList\n          listContact={this.handleFilter()}\n          onDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}